package com.mkdevs.stdinput;

import com.mkdevs.IDable;
import com.mkdevs.domain.Dice;
import com.mkdevs.domain.DiceFactory;

import lombok.RequiredArgsConstructor;

/**
 * Classes that extend this abstract class should prepare a template
 * that is then used to build the dice by the assemble method.
 * The assemble method makes use of a {@link DiceFactory} to which it 
 * passes the template. This must be provided by the implementing 
 * class in the constructor
 * 
 * @author mike
 *
 */
@RequiredArgsConstructor
public abstract class AbstractDiceAssembler<T> implements DiceAssembler {
	
	private final DiceFactory<T> factory;

	/**
	 * assembles the dice using the template generated by {@link #generateTemplate()}
	 * @return the assembled dice
	 */
	@Override
	public final Dice assemble() {
		return factory.build(generateTemplate());
	}

	/**
	 * Generates a template to be used by the {@link DiceFactory} to generate the 
	 * required dice.
	 * @return
	 */
	protected abstract T generateTemplate();
	
}
